describe Chal58 do
  P = 11470374874925275658116663507232161402086650258453896274534991676898999262641581519101074740642369848233294239851519212341844337347119899874391456329785623
  Q = 335062023296420808191071248367701059461
  J = 34233586850807404623475048381328686211071196701374230492615844865929237417097514638999377942356150481334217896204702
  G = 622952335333961296978159266084741085889881358738459939978290179936063635566740258555167783009058567397963466103140082647486611657350811560630587013183357

  describe "20 bit hack" do
    let(:range) { 0..(2**20) }
    let(:y) { 7760073848032689505395005705677365876654629189298052775754597607446617558600394076764814236081991643094239886772481052254010323780165093955236429914607119 }

    it do
      k, i = KangarooDiscreteLogarithm.log(G, y, P, range.min, range.max)
      puts "Took #{i} trials for 20 bits"
      expect(G.powmod(k, P)).to eq(y)
    end
  end


  describe "30 bit hack" do
    let(:range) { 0..(2**30) }
    let(:k) { rand(range) }
    let(:y) { G.powmod(k, P) }

    it do
      k, i = KangarooDiscreteLogarithm.log(G, y, P, range.min, range.max)
      puts "Took #{i} trials for 30 bits"
      expect(G.powmod(k, P)).to eq(y)
    end
  end

  describe "40 bit hack" do
    let(:range) { 0..(2**40) }
    let(:y) { 9388897478013399550694114614498790691034187453089355259602614074132918843899833277397448144245883225611726912025846772975325932794909655215329941809013733 }

    it do
      k, i = KangarooDiscreteLogarithm.log(G, y, P, range.min, range.max)
      puts "Took #{i} trials for 40 bits"
      expect(G.powmod(k, P)).to eq(y)
    end
  end

  # Hack
  pending
end
